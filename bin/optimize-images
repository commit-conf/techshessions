#!/usr/bin/env node

const sharp = require("sharp");
const fs = require("fs");

function optimize({ sourceDir, size, avatar }) {
  const destinationDir = sourceDir.replace("/original", "");
  return new Promise((resolve, reject) => {
    fs.readdir(sourceDir, function(err, files) {
      if (err) {
        console.log("Unable to scan directory: " + err);
        reject(err);
      }
      files.forEach(file => {
        console.log("Optimizing image " + file);
        if (file.endsWith(".svg")) {
          fs.copyFileSync(`${sourceDir}/${file}`, `${destinationDir}/${file}`);
        } else {
          let result = sharp(`${sourceDir}/${file}`).resize(
            size,
            avatar ? size : undefined
          );
          if (avatar) {
            result = result.extract({
              width: size,
              height: size,
              top: 0,
              left: 0
            });
          }
          result
            .toBuffer()
            .then(data => {
              fs.writeFileSync(`${destinationDir}/${file}`, data);
            })
            .catch(err => {
              console.log(err);
            });
        }
      });
      resolve();
    });
  });
}

return Promise.all([
  optimize({
    sourceDir: "static/img/members/original",
    size: 200,
    avatar: true
  }),
  optimize({
    sourceDir: "static/img/collaborators/original",
    size: 260,
    avatar: false
  })
]);
